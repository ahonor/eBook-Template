{"name":"Ebook-template","body":"Template for Writing an eBook\r\n=============================\r\n\r\nThis project contains a template used to write eBooks using\r\n[AsciiDoc][1], Git, MacVim and other tools on Mac OS X.\r\n\r\nThe aim of the project is to provide a boilerplate used to generate\r\neBooks in several formats on one operation:\r\n\r\n- Self-contained HTML\r\n- ePub\r\n- PDF\r\n- Kindle\r\n\r\nMotivation\r\n----------\r\n\r\nWhy using such a complex setup instead of just using a simpler tool like\r\nWord or Pages?\r\n\r\n- The primary motivation of this template is versioning. Being able to\r\n  use plain text files as input for the book brings the possibility of\r\n  versioning each change individually using Git, Subversion or any other\r\n  similar tool. This also opens up the door to collaboration among team\r\n  members when editing a document.\r\n- The second motivation is to separate the presentation and the layout\r\n  of the final book from its contents. Other output file types could be\r\n  added in the future.\r\n- This also brings the possibility of using any text editor in just\r\n  about any operating system; files are just plain text files that can\r\n  be edited with gEdit, Notepad, Emacs, Vim, TextEdit, or any other\r\n  tool.\r\n- Markup languages like Markdown or Asciidoc (used in this template) are\r\n  simpler and more readable than LaTeX or other SGML-like languages,\r\n  making the files readable and lean even when edited in a text editor\r\n  without any syntax highlighting or formatting support.\r\n- Finally, being able to streamline the creation of the three versions\r\n  of the book in just one command-line operation allows the whole setup\r\n  to be automatized.\r\n\r\nHow it Works\r\n------------\r\n\r\nThe `master.asciidoc` file at the root of this project provides the\r\nguiding structure of the book. Chapters can be shuffled around,\r\nindependently of their contents or internal structure.\r\n\r\nIndividual chapters are stored in the `chapters` folder, one file per\r\nchapter.\r\n\r\nImages are stored as PNG files in the `images` folder.\r\n\r\nThe `build.sh` script creates a temporary `_build` folder, copies all\r\nthe different elements in it (the master file, the chapters and the\r\nimages) and commands the execution of the whole toolchain in order to\r\nget the final result.\r\n\r\nSoftware Requirements\r\n---------------------\r\n\r\nFollow these instructions to install the required libraries in Mac OS X:\r\n\r\n1. Install [Homebrew][2] if not already installed.\r\n    - If already installed, remember to run `brew update`.\r\n2. Download and install `asciidoc` using Homebrew:\r\n    - `brew install asciidoc`\r\n3. Install source-highlight with Homebrew:\r\n    - `brew install source-highlight`\r\n4. Download and install the latest MacTeX package from\r\n    `http://www.tug.org/mactex/`\r\n5. Install the `dblatex` package manually:\r\n    - `brew install https://raw.github.com/gist/1430194/fc7142e21f78c19bee70c96fbef7ed583bca23b5/dblatex.rb`\r\n6. Download the [kindlegen][3] tool and install it in the following\r\n   path:\r\n    - `/Applications/KindleGen_Mac_i386_v2/kindlegen`\r\n\r\nHow to build the book \r\n---------------------\r\n\r\n1. Make sure AsciiDoc and dblatex are properly installed.\r\n2. Execute the booklet/build.sh script. This will create the PDF, ePub\r\n   and HTML versions of the book.\r\n3. The script also generates the .mobi (Amazon Kindle) version if the\r\n   [kindlegen][3] tool is installed.\r\n\r\nAfter the build process completes, the compiled eBooks will be available\r\nat the `_build` subfolder.\r\n\r\nTroubleshooting\r\n---------------\r\n\r\n### PDF build error\r\n\r\nIf the generation of the PDF fails during \"makeindex\" follow the\r\ninstructions [in this page][5] and add the following line: \r\n\r\n    openout_any = r\r\n\r\nto the file `/usr/local/texlive/2011/texmf.cnf`\r\n\r\n### EPUB build error\r\n\r\nIf the EPUB generation causes problems, [check this page][4].\r\n\r\n### Installing dblatex\r\n\r\ndblatex has to be installed using a custom Homebrew formula, because the\r\ndefault installation does not include it at the time of this writing.\r\nThis might change in the future.\r\n\r\n### Why not generating the HTML using a2x?\r\n\r\nUsing a2x for the HTML creation has the following drawbacks:\r\n\r\n- It takes longer;\r\n- It does not embed the images in the HTML;\r\n- It does not do syntax highlighting.\r\n\r\nHowever, it creates an index when required.\r\n\r\nLicense\r\n-------\r\n\r\nThis work is placed in the public domain. It belongs to mankind and to\r\nnobody in particular. Use it to write poetry, arts, science books and\r\nnovels. You cannot use it to write hatred or stupid things.\r\n\r\nHowever, just in case, the author does not take any responsibility about\r\nany bad things that might happen when using this template. However, this\r\nshould not happen.\r\n\r\nUse, share, transform, as much as you want. I hope you find it useful!\r\n\r\n\r\n\r\n[1]:http://www.methods.co.nz/asciidoc/\r\n[2]:http://mxcl.github.com/homebrew/\r\n[3]:http://www.amazon.com/gp/feature.html?ie=UTF8&docId=1000234621\r\n[4]:http://francisshanahan.com/index.php/2011/fixing-epub-problem-docbook-xsl-asciidoc-a2x/\r\n[5]:http://hackage.haskell.org/trac/ghc/wiki/Building/MacOSX\r\n\r\n","tagline":"Template to create PDF, ePub and Kindle books with Asciidoc and dblatex","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}